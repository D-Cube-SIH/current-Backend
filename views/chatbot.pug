doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", href="chatbot.css")
    link(href="https://cdn.boxicons.com/fonts/brands/boxicons-brands.min.css" rel="stylesheet")
    title Chatbot
  body
    nav.side-bar
      header
        .image-text
          span.img
            img(src="/assets/ex-logo.jpeg", alt="logo" )
          .text.header-text
            span.name MINDLEY
        i.bx.bx-arrow-right-circle.toggle
      .menu-bar
        .menu
          ul.menu-links
            li.nav-link
              a(href="#")
                i.bx.bx-home-alt-2.icon
                span.text.nav-text Dashboard
            li.nav-link.active
              a(href="#")
                i.bx.bx-message-circle-dots.icon
                span.text.nav-text Chatbot
            li.nav-link
              a(href="#")
                i.bx.bx-people.icon
                span.text.nav-text Peers
            li.nav-link
              a(href="#")
                i.bx.bx-captions.icon
                span.text.nav-text Resources
        .bottom-content
          li.logout
            a(href="#")
              i.bx.bx-running.icon
              span.text.nav-text Logout

    .chat-container
      .chat
        // Initial bot message
        .bot-bubble
          p Hi, How can I help you today?

    .input-holder
      .input-box
        input#user-input(type="text" name="message" placeholder="Type your message..." autocomplete="off")
        button#send-btn
          img(src="./../../assets/images/send_40dp_FFFFFF_FILL0_wght400_GRAD0_opsz40.svg" alt="")

    script.
      const chatContainer = document.querySelector(".chat");
      const inputField = document.querySelector("#user-input");
      const sendBtn = document.querySelector("#send-btn");

      // Add message bubble
      const addMessage = (message, sender = "user") => {
        const bubble = document.createElement("div");
        bubble.classList.add(sender === "user" ? "user-bubble" : "bot-bubble");
        bubble.innerText = message;
        chatContainer.appendChild(bubble);
        chatContainer.scrollTop = chatContainer.scrollHeight;
      };

      // Typing indicator
      const showTyping = () => {
        const typing = document.createElement("div");
        typing.classList.add("typing-indicator");
        typing.innerHTML = "<span></span><span></span><span></span>";
        chatContainer.appendChild(typing);
        chatContainer.scrollTop = chatContainer.scrollHeight;
        return typing;
      };

      // Send message
      sendBtn.addEventListener("click", async () => {
        const userMessage = inputField.value.trim();
        if (!userMessage) return;

        addMessage(userMessage, "user");
        inputField.value = "";

        const typing = showTyping();

        try {
          const res = await fetch("/chat", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ userInput: userMessage }),
          });

          const data = await res.json();
          typing.remove();
          addMessage(data.reply || "⚠️ No response from bot.", "bot");
        } catch (err) {
          typing.remove();
          addMessage("⚠️ Error connecting to chatbot.", "bot");
        }
      });

      // Enter key = send
      inputField.addEventListener("keypress", (e) => {
        if (e.key === "Enter") sendBtn.click();
      });
